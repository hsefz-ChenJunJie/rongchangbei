version: '3.8'

services:
  ai-dialogue-backend:
    build: 
      context: .
      dockerfile: Dockerfile
      # 启用BuildKit缓存
      cache_from:
        - python:3.12-slim
      args:
        BUILDKIT_INLINE_CACHE: 1
    container_name: ai-dialogue-backend
    restart: unless-stopped
    ports:
      - "8000:8000"
    # 资源限制
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'
    environment:
      # 基础配置
      - HOST=0.0.0.0
      - PORT=8000
      - DEBUG=false
      - LOG_LEVEL=INFO
      
      # LLM服务配置
      - OPENROUTER_API_KEY=${OPENROUTER_API_KEY:-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}
      - OPENROUTER_BASE_URL=${OPENROUTER_BASE_URL:-https://openrouter.ai/api/v1}
      - OPENROUTER_MODEL=${OPENROUTER_MODEL:-qwen/qwen3-235b-a22b:free}
      
      # STT服务配置
      - USE_REAL_VOSK=${USE_REAL_VOSK:-false}
      - VOSK_MODEL_PATH=${VOSK_MODEL_PATH:-/app/model/vosk-model}
      - VOSK_SAMPLE_RATE=${VOSK_SAMPLE_RATE:-16000}
      
      # 安全配置
      - ALLOWED_ORIGINS=["*"]
      
      # 性能配置
      - STT_TIMEOUT=${STT_TIMEOUT:-20}
      - LLM_TIMEOUT=${LLM_TIMEOUT:-45}
      - WEBSOCKET_TIMEOUT=${WEBSOCKET_TIMEOUT:-600}
      - MAX_WORKERS=${MAX_WORKERS:-8}
      
      # 日志配置
      - LOG_FILE=/app/logs/app.log
      - LOG_MAX_SIZE=${LOG_MAX_SIZE:-100MB}
      - LOG_BACKUP_COUNT=${LOG_BACKUP_COUNT:-10}
      - LOG_FORMAT=${LOG_FORMAT:-json}
    
    volumes:
      # 挂载日志目录
      - ./logs:/app/logs
      # 如果有模型文件，挂载模型目录
      - ./model:/app/model:ro
    
    networks:
      - ai-dialogue-network
    
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  ai-dialogue-network:
    driver: bridge